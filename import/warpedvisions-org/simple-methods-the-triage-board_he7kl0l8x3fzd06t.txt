# Simple methods: the triage board

Some of my most productive business tools are the simplest. Take the *triage board*. It's a whiteboard that hangs over my desk that has a list of my current projects, with magnets marking what I'm working on next. Weekly I erase the board and re-prioritize my projects, and daily I scribble notes and move the magnets as I work.

These concrete tools are about focus, flexibility, and the least amount of investment possible. It's critical to work on the most important things, and important to know what's next. Seeing the list of clients and projects helps me understand where I stand in terms of bandwidth too, using the simple, physical limits of the size of the board and legibility of my writing at smaller sizes.

I also use other real world hardware and the occasional piece software for other aspects of the business of software, but the board is big, and bold, and in my face.

## Charting a course with post-it notes

I also use PostIt notes for lists of tasks that need to be done next. The notes stick to the whiteboard beside projects, so I can rotate work around. These are not detailed notes or TODOs, rather they are lists of key tasks that need to be done next, as well as notes from conversations and discussions related to the project.

When detail notations are required, I rely on formal specifications, issue tracking, and project management tools. These are the endpoints of the process, rather than the crux. This allows me to use tools that fit the job rather than forcing all problems into a single method.

## The principles of business tools

What I've found is that there are a few simple principles that are critical for small business tools and processes.

- Low cost and high utility are critical 
- Use physical constraints of real-world tools to your advantage
- Use software only where it's the best tool for the job
- Single tools do not often fit all problems 

I've seem businesses spend disproportionate amount of their profits on automation tools, processes, and other organizational objectives on systems that failed to deliver.

A set of tools should be grossly pragmatic, vastly improving profitability and quality. Anything less is irresponsible to the business and the businesses purpose.

#Software Engineering
